FROM golang:latest as build
ARG CONFIG=etc/telegraf/telegraf.conf


RUN DEBIAN_FRONTEND=noninteractive apt-get update && \
    DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends iputils-ping snmp procps lm-sensors libcap2-bin git make &&  \
    rm -rf /var/lib/apt/lists/*
 

WORKDIR /build
# Will not need to checkout branch after release
RUN  git clone https://github.com/srebhan/telegraf && cd telegraf && git checkout minify

WORKDIR /build/telegraf
RUN make build_tools

RUN ./tools/minify/minify --config $CONFIG

FROM alpine:3.15
 
RUN echo 'hosts: files dns' >> /etc/nsswitch.conf
RUN apk add --no-cache iputils ca-certificates net-snmp-tools procps lm_sensors tzdata su-exec libcap libc6-compat && \
    update-ca-certificates

ENV TELEGRAF_VERSION 1.23.0

COPY --from=build /build/telegraf/telegraf .

RUN set -ex && \
    mkdir ~/.gnupg; \
    echo "disable-ipv6" >> ~/.gnupg/dirmngr.conf; \
    apk add --no-cache --virtual .build-deps wget gnupg tar && \
    for key in \
        05CE15085FC09D18E99EFB22684A14CF2582E0C5 ; \
    do \
        gpg --keyserver hkp://keyserver.ubuntu.com --recv-keys "$key" ; \
    done && \
    mkdir -p /usr/src /etc/telegraf && \
    mkdir /etc/telegraf/telegraf.d && \
    mv ./telegraf /usr/bin/ && \
    chmod +x /usr/bin/telegraf && \
    gpgconf --kill all && \
    rm -rf *.tar.gz* /usr/src /root/.gnupg && \
    apk del .build-deps && \
    addgroup -S telegraf && \
    adduser -S telegraf -G telegraf && \
    chown -R telegraf:telegraf /etc/telegraf

EXPOSE 8125/udp 8092/udp 8094

COPY entrypoint.sh /entrypoint.sh
RUN chmod +x entrypoint.sh
ENTRYPOINT ["/entrypoint.sh"]
CMD ["telegraf"]

